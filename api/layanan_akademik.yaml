openapi: 3.0.3
info:
  title: "API Layanan Akademik"
  version: "1.0"
  description: |-
    Pembuatan API Layanan Akademik untuk Fakultas Ilmu Komputer Universitas Pembangunan Nasional Veteran Jakarta demi memenuhi keperluan Projek UAS mata kuliah Pembangunan Perangkat Lunak Berorientasi Service tahun 2023.

tags:
  - name: Mahasiswa
    description: Akses data mahasiswa.
  - name: Dosen
    description: Akses data dosen.
  - name: Skripsi
    description: Akses data skripsi.
  - name: Fasilitas
    description: Akses data fasilitas.
  - name: Pengajuan Skripsi
    description: Service pengajuan skripsi.
  - name: Peminjaman Fasilitas
    description: Service peminjaman fasilitas.

paths:
  /mahasiswa:
    get:
      summary: Get All Mahasiswa
      description: Retrieve all Mahasiswa's data.
      operationId: get_all_mahasiswa
      responses:
        200:
          description: All Mahasiswa successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mahasiswa'
      tags:
        - Mahasiswa
    post:
      summary: Create a new Mahasiswa
      description: Create a new Mahasiswa data
      operationId: add_mahasiswa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mahasiswa'
      responses:
        201:
          description: Mahasiswa created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mahasiswa'
      tags:
        - Mahasiswa

  /mahasiswa/{id}:
    get:
      summary: Get a Mahasiswa by ID
      description: Retrieve a Mahasiswa by ID
      operationId: get_mahasiswa
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Mahasiswa by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mahasiswa'
      tags:
        - Mahasiswa
    put:
      summary: Update a Mahasiswa by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mahasiswa'
      responses:
        200:
          description: Mahasiswa updated successfully
        404:
          description: Mahasiswa not found
      tags:
        - Mahasiswa
    delete:
      summary: Delete a Mahasiswa by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Mahasiswa deleted successfully
        404:
          description: Mahasiswa not found
      tags:
        - Mahasiswa

  /dosen:
    get:
      summary: Get All Dosen
      responses:
        200:
          description: Retrieve all Dosen
      tags:
        - Dosen
    post:
      summary: Create a new Dosen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dosen'
      responses:
        201:
          description: Dosen created successfully
      tags:
        - Dosen

  /dosen/{id}:
    get:
      summary: Get a Dosen by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Dosen by ID
      tags:
        - Dosen
    put:
      summary: Update a Dosen by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dosen'
      responses:
        200:
          description: Dosen updated successfully
        404:
          description: Dosen not found
      tags:
        - Dosen
    delete:
      summary: Delete a Dosen by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Dosen deleted successfully
        404:
          description: Dosen not found
      tags:
        - Dosen

  /skripsi:
    get:
      summary: Get All Skripsi
      responses:
        200:
          description: Retrieve all Skripsi
      tags:
        - Skripsi
    post:
      summary: Create a new Skripsi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skripsi'
      responses:
        201:
          description: Skripsi created successfully
      tags:
        - Skripsi

  /skripsi/{id}:
    get:
      summary: Get a Skripsi by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Skripsi by ID
      tags:
        - Skripsi
    put:
      summary: Update a Skripsi by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Skripsi'
      responses:
        200:
          description: Skripsi updated successfully
        404:
          description: Skripsi not found
      tags:
        - Skripsi
    delete:
      summary: Delete a Skripsi by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Skripsi deleted successfully
        404:
          description: Skripsi not found
      tags:
        - Skripsi

  /fasilitas:
    get:
      summary: Get All Fasilitas
      responses:
        200:
          description: Retrieve all Fasilitas
      tags:
        - Fasilitas
    post:
      summary: Create a new Fasilitas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fasilitas'
      responses:
        201:
          description: Fasilitas created successfully
      tags:
        - Fasilitas

  /fasilitas/{id}:
    get:
      summary: Get a Fasilitas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Fasilitas by ID
      tags:
        - Fasilitas
    put:
      summary: Update a Fasilitas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fasilitas'
      responses:
        200:
          description: Fasilitas updated successfully
        404:
          description: Fasilitas not found
      tags:
        - Fasilitas
    delete:
      summary: Delete a Fasilitas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Fasilitas deleted successfully
        404:
          description: Fasilitas not found
      tags:
        - Fasilitas

  /peminjaman_fasilitas:
    get:
      summary: Get All Peminjaman Fasilitas
      responses:
        200:
          description: Retrieve all Peminjaman Fasilitas
      tags:
        - Peminjaman Fasilitas
    post:
      summary: Create a new Peminjaman Fasilitas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeminjamanFasilitas'
      responses:
        201:
          description: Peminjaman Fasilitas created successfully
      tags:
        - Peminjaman Fasilitas
  
  /peminjaman_fasilitas/{id}:
    get:
      summary: Get a Peminjaman Fasilitas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Peminjaman Fasilitas by ID
      tags:
        - Peminjaman Fasilitas
    put:
      summary: Update a Peminjaman Fasilitas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeminjamanFasilitas'
      responses:
        200:
          description: Peminjaman Fasilitas updated successfully
        404:
          description: Peminjaman Fasilitas not found
      tags:
        - Peminjaman Fasilitas
          
  /pengajuan_skripsi:
    get:
      summary: Get All Pengajuan Skripsi
      responses:
        200:
          description: Retrieve all Pengajuan Skripsi
      tags:
        - Pengajuan Skripsi
    post:
      summary: Create a new Pengajuan Skripsi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PengajuanSkripsi'
      responses:
        201:
          description: Pengajuan Skripsi created successfully
      tags:
        - Pengajuan Skripsi

  /pengajuan_skripsi/{id}:
    get:
      summary: Get a Pengajuan Skripsi by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Retrieve a Pengajuan Skripsi by ID
      tags:
        - Pengajuan Skripsi
    put:
      summary: Update a Pengajuan Skripsi by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PengajuanSkripsi'
      responses:
        200:
          description: Pengajuan Skripsi updated successfully
        404:
          description: Pengajuan Skripsi not found
      tags:
        - Pengajuan Skripsi

components:
  schemas:
    Mahasiswa:
      type: object
      properties:
        id_mahasiswa:
          type: integer
        nama_mahasiswa:
          type: string
        nim:
          type: string
        email:
          type: string
        fakultas:
          type: string
        jurusan:
          type: string
        angkatan:
          type: integer

    Dosen:
      type: object
      properties:
        id_dosen:
          type: integer
        nama_dosen:
          type: string
        nidn:
          type: string
        email:
          type: string
        fakultas:
          type: string

    Skripsi:
      type: object
      properties:
        id_skripsi:
          type: integer
        id_mahasiswa:
          type: integer
        id_dosen:
          type: integer
        judul_skripsi:
          type: string
        status_skripsi:
          type: string

    Fasilitas:
      type: object
      properties:
        id_fasilitas:
          type: integer
        nama_fasilitas:
          type: string
        deskripsi_fasilitas:
          type: string
        kapasitas_fasilitas:
          type: integer
        status_fasilitas:
          type: string

    PengajuanSkripsi:
      type: object
      properties:
        id_pengajuan:
          type: integer
        id_skripsi:
          type: integer
        status_pengajuan:
          type: string
          
    PeminjamanFasilitas:
      type: object
      properties:
        id_peminjaman:
          type: integer
        id_mahasiswa:
          type: integer
        id_fasilitas:
          type: integer
        tanggal_peminjaman:
          type: string
        tanggal_pengembalian:
          type: string
        status_peminjaman:
          type: string
